{"version":3,"sources":["components/header/header.js","components/card/card.js","components/singleCard/singleCard.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["header","className","card","props","onClick","click","class","src","poster","width","height","alt","title","year","singleCard","backBtnClick","rating","genre","director","plot","footer","baseUrl","authToken","app","componentDidMount","exploreMovies","a","arr","apiResponse","i","length","searchTitle","getMovies","temp","push","console","log","JSON","stringify","reduce","el","concat","setState","pageType","recommended","pickRandomly","boxoffice","upcoming","critics","movies","s","fetch","api_call","json","response","Search","number","newArr","Math","floor","random","indexOf","showSingleMovie","id","movie","backBtnHandler","state","showMovies","movies1","movies2","movies3","movies4","singleMovie","this","map","index","Poster","imdbID","Title","Year","imdbRating","Genre","Director","Plot","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0588f339.chunk.js","sourcesContent":["//header component\nimport React from 'react';\nimport './header.css';\n\nconst header =()=>{\n    return(\n        <div className=\"header\">\n            <h2>imdb</h2>\n        </div>\n    )\n}\n\nexport default header;","//single card component\nimport React from 'react';\nimport './card.css';\n\nconst card=(props)=>{\n    return(\n        <div className=\"card\" onClick={props.click}>                  \n            <div class=\"imgBox\">\n                <img src={props.poster} width=\"180\" height=\"180\" alt=\"movie poster\"/>\n            </div>\n            <div class=\"contentBox\">\n                <p>{props.title}</p>\n                <p>({props.year})</p>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default card;","import React from 'react';\nimport './singleCard.css';\n\nconst singleCard=(props)=>(\n    <div class=\"singleCardContainer\">\n        <button class=\"backButton\" onClick={props.backBtnClick}>Back</button>\n        <div className=\"singleCard\">                  \n            <div className=\"singleCardImgBox\">\n                <img src={props.poster} width=\"360\" height=\"600\" alt=\"movie poster\"/>\n            </div>\n            <div class=\"singleCardContentBox\">\n                <h2 className=\"movieTitle\">{props.title}</h2>\n                <p className=\"movieYear\">({props.year})</p>\n                <p><b>Rating : </b>{props.rating}</p>\n                <p><b>Genre : </b>{props.genre}</p>\n                <p><b>Director : </b>{props.director}</p>\n                <p><b>Plot : </b> {props.plot}</p>\n                \n            </div>            \n        </div>\n\n    </div>\n        \n)\n\nexport default singleCard;","import React from 'react';\nimport './footer.css';\n\nconst footer =()=>{\n    return(\n        <div className=\"footer\">\n            <p className=\"footer-content\">&copy;copyright : Ramesh Kumar Munjal</p>\n        </div>\n    )\n}\n\nexport default footer;","import React, { Component }  from 'react';\n\nimport './App.css';\nimport Header from './components/header/header';\nimport Card from './components/card/card';\nimport SingleCard from './components/singleCard/singleCard';\nimport Footer from './components/footer/footer';\n\nconst baseUrl='http://www.omdbapi.com';    \nconst authToken=\"499e294\";\n\nclass app extends Component {\n  constructor(props){\n    super(props);\n    //state defined - properties - movies(all) and four categories\n    this.state={\n      movies:[],\n      recommended:[],\n      upcoming:[],\n      boxoffice:[],\n      critics:[],\n      showMovies:false, \n      movie:{},\n      pageType:\"\"\n    }\n  }\n  //when component mounts\n  componentDidMount=()=>{\n    this.exploreMovies();\n  }\n  //array of search words - in a loop - get movies on all these search words\n  //out of all movies got - randomly select movies for four categories\n  exploreMovies=async()=>{     \n      let arr=[\"boy\", \"girl\", \"man\", \"woman\", \"king\", \"queen\", \"dream\", \"play\", \"fire\", \"rain\"];\n      let apiResponse=[];\n      for(let i=0; i<arr.length; i++){\n        let searchTitle=arr[i];\n        let temp=await this.getMovies(searchTitle);\n        apiResponse.push(temp);                      \n      }     \n      console.log(\"apiResponse\" , JSON.stringify(apiResponse));\n      let a=apiResponse.reduce((arr, el)=>{\n        return arr.concat(el)\n    }, []);\n\n\n      this.setState({\n        pageType:\"home\",\n        recommended:this.pickRandomly(a, 6),\n        boxoffice:this.pickRandomly(a, 6),\n        upcoming:this.pickRandomly(a, 6),\n        critics:this.pickRandomly(a, 6),\n        movies:a\n      })\n                  \n  }\n//function - to make api calls \n  getMovies = async (s)=>{      \n    \n    const api_call=await fetch(`${baseUrl}/?s=${s}&apikey=${authToken}`);\n    const response = await api_call.json();\n    \n    let temp=response.Search;\n    /*    \n    let a=[...this.state.movies];    \n    a.push(temp);    \n    a=a.reduce((arr, el)=>{\n      return arr.concat(el)\n  }, []);\n//console.log(a);\n    this.setState({\n      recommended:this.pickRandomly(a, 6),\n      boxoffice:this.pickRandomly(a, 6),\n      upcoming:this.pickRandomly(a, 6),\n      critics:this.pickRandomly(a, 6),\n      movies:a\n    })\n    */\n   return temp;        \n  }\n//out of all  movies - randomly select movies and keep them exclusive\n  pickRandomly=(arr, number)=>{\n    let newArr=[];\n    for(let i=0; i<number; i++){\n      let index=Math.floor(Math.random()*arr.length);\n      let temp=arr[index];\n      //ensure exclusive\n      if(newArr.indexOf(temp)=== -1){\n        newArr.push(temp);\n      } else {//if matches not to increase counter\n          --i\n      }      \n    }\n    console.log(newArr);\n    return newArr;\n  }\n\n  showSingleMovie=async(id)=>{\n    console.log(id);\n    //this.baseUrl+\"/?i=\"+singleMovieId+\"&apikey=\"+this.authToken)\n    const api_call=await fetch(`${baseUrl}/?i=${id}&apikey=${authToken}`);\n    const response = await api_call.json();\n    \n    let temp=response;\n    console.log(temp);\n    this.setState({\n      pageType:\"single\",\n      movie:temp\n    })  \n  }\n\n  backBtnHandler=()=>{\n    this.setState({\n      pageType:\"home\"\n    })\n  }\n//render as per state updated\n  render(){     \n    let movies1=null;\n    let movies2=null; \n    let movies3=null; \n    let movies4=null; \n    let singleMovie=null;        \n\n    if(this.state.pageType===\"home\"){  \n      movies1=this.state.recommended;\n      movies2=this.state.upcoming;\n      movies3=this.state.critics;\n      movies4=this.state.boxoffice;      \n      \n      return(\n        <div className=\"App\">        \n          <Header /> \n            <h2>Recommended For You</h2>               \n            <div className=\"container\">\n              {movies1.map((movie, index) => \n                <Card poster={movie.Poster} \n                      id={movie.imdbID}\n                      title={movie.Title}\n                      key={index} \n                      year={movie.Year} \n                      click={()=>this.showSingleMovie(movie.imdbID)}\n                      />)} \n                      \n            </div>\n            <h2>Upcoming Movies</h2>               \n            <div className=\"container\">\n              {movies2.map((movie, index) => \n                <Card poster={movie.Poster} \n                      id={movie.imdbID}\n                      title={movie.Title}\n                      key={index} \n                      year={movie.Year} \n                      click={()=>this.showSingleMovie(movie.imdbID)}\n                      />)} \n            </div>\n            <h2>Critics Choice</h2>               \n            <div className=\"container\">\n              {movies3.map((movie, index) => \n                <Card poster={movie.Poster} \n                      id={movie.imdbID}\n                      title={movie.Title} \n                      key={index}\n                      year={movie.Year} \n                      click={()=>this.showSingleMovie(movie.imdbID)}\n                      />)} \n            </div>\n            <h2>Box Office Hits</h2>               \n            <div className=\"container\">\n              {movies4.map((movie, index) => \n                <Card poster={movie.Poster} \n                      id={movie.imdbID}\n                      title={movie.Title} \n                      key={index}\n                      year={movie.Year} \n                      click={()=>this.showSingleMovie(movie.imdbID)}\n                      />)} \n            </div>\n          <Footer />\n        </div>)\n    }\n    else if(this.state.pageType===\"single\"){\n      singleMovie=this.state.movie;\n      return(\n        <div className=\"App\">        \n          <Header />\n          <SingleCard poster={singleMovie.Poster} \n                      id={singleMovie.imdbID}\n                      title={singleMovie.Title}                      \n                      year={singleMovie.Year} \n                      rating={singleMovie.imdbRating}\n                      genre={singleMovie.Genre}\n                      director={singleMovie.Director}\n                      plot={singleMovie.Plot}\n                      backBtnClick={this.backBtnHandler}\n                      \n                      />\n            \n          <Footer />        \n        </div>\n      )\n    }\n    \n    return (\n      <div className=\"App\">        \n        <Header />\n        {movies1}\n        {movies2}\n        {movies3}\n        {movies4}\n        <Footer />        \n      </div>\n    );\n  }  \n}\n\nexport default app;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}