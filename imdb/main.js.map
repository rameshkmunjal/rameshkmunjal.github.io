{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/imdb-http.service.ts","webpack:///./src/app/single-movie/single-movie.component.css","webpack:///./src/app/single-movie/single-movie.component.html","webpack:///./src/app/single-movie/single-movie.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#header{\\r\\n    background:rgb(4, 17, 0);\\r\\n    text-align:center;\\r\\n    padding:10px 0px 20px 0px;\\r\\n    color:rgb(200, 200, 150);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n#footer{\\r\\n    background:rgb(63,102, 87);\\r\\n    text-align:center;\\r\\n    padding:10px 0px;\\r\\n    color:white;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\" id=\\\"header\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h1>\\n        Welcome to {{ title }}\\n      </h1>\\n    </div>\\n  </div>  \\n</div>\\n\\n\\n  <router-outlet></router-outlet>\\n      \\n\\n<div class=\\\"container\\\" id=\\\"footer\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <p>Copyright&copy; Ramesh Kumar Munjal</p>\\n      </div>\\n    </div>  \\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  title = 'imdb';\n  \n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\n\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {ImdbHttpService} from './imdb-http.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { SingleMovieComponent } from './single-movie/single-movie.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SingleMovieComponent\n       \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule, \n    RouterModule.forRoot([ \n      {path:'home', component:HomeComponent},      \n      {path:'singleMovie/:imdbID', component:SingleMovieComponent},\n      {path:'**', component:HomeComponent}\n      //blog/:blogId\n    ])      \n  ],\n  providers: [ImdbHttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".btn{\\r\\n    background:rgb(4, 17, 0);\\r\\n    color:rgb(200,200,150);\\r\\n    font-family:helvetica;\\r\\n    font-weight:bold;\\r\\n    padding:5px 20px;\\r\\n}\\r\\n#contents{\\r\\n    background:rgb(200, 240, 190);\\r\\n    text-align:center;\\r\\n    padding:10px 0px 20px 0px;\\r\\n    height:auto;\\r\\n    color:rgb(20,20,20)\\r\\n}\\r\\n.panel-heading{\\r\\n    height:80px;\\r\\n    padding-top:20px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\"id=\\\"contents\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row\\\"*ngIf=\\\"allMovies.length>0\\\">\\n       <div *ngFor=\\\"let movie of allMovies\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-4\\\">\\n         <div class=\\\"panel panel-default\\\">\\n           <div class=\\\"panel-heading\\\"><b>{{movie.Title | uppercase}}</b></div>\\n           <div class=\\\"panel-body\\\">\\n            <img class=\\\"moviePic\\\" [src]=\\\"movie.Poster\\\" width=\\\"200\\\" height=\\\"200\\\" >\\n           </div>\\n           <div class=\\\"panel-footer\\\">\\n             <p> <a [routerLink]=\\\"['/singleMovie', movie.imdbID]\\\" class=\\\"btn\\\">View</a></p>\\n           </div>\\n         </div>\\n       </div>\\n      </div> \\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {ImdbHttpService} from \"../imdb-http.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy { \n  public allMovies;\n  public titlesArray = [\"boy\", \"girl\", \"man\", \"woman\", \"king\", \"queen\", \"city\", \"player\", \"day\", \"night\", \"dream\"];\n  public index = Math.floor(Math.random() * (this.titlesArray.length-1))+1;\n  public titleChoice = this.titlesArray[this.index];\n  constructor(public imdbHttpService:ImdbHttpService, private elementRef:ElementRef) {\n    console.log(\"Home Component constructor called\");\n\n   }\n\n  ngOnInit() {\n    this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = 'rgb(200, 190, 50)';\n    console.log(\"Home Component OnInit Called\");\n    this.allMovies = this.imdbHttpService.getAllMovies(this.titleChoice).subscribe(\n      data=>{\n        console.log(\"logging data\");\n        this.allMovies = data.Search;\n        console.log(this.allMovies);\n      }, \n      error=>{\n        console.log(\"some error occurred\");\n      }\n    )\n    console.log(this.allMovies);\n  }\n  \n  ngOnDestroy(){\n    console.log(\"Home Component Destroyed\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {observable} from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImdbHttpService {\n  public allMovies;\n  public searchTitle = 'girl';\n  public baseUrl = 'http://www.omdbapi.com';\n  public authToken = \"499e294\" ;\n\n  constructor(private _http:HttpClient) {\n    console.log(\"imdb http service called\");\n  }\n  \n  public getAllMovies(titleChoice):any{\n    this.searchTitle=titleChoice;\n    let myResponse = this._http.get(this.baseUrl+\"/?s=\"+this.searchTitle+\"&apikey=\"+this.authToken);\n    console.log(myResponse);\n    return myResponse;\n  }\n  public getSingleMovie(singleMovieId):any{\n    let myResponse = this._http.get(this.baseUrl+\"/?i=\"+singleMovieId+\"&apikey=\"+this.authToken);\n    console.log(myResponse);\n    return myResponse;\n  }\n}\n","module.exports = \"#singleMovieContainer{\\r\\n    text-align:left;\\r\\n    font-family:helvetica;\\r\\n    padding:20px 40px;\\r\\n    min-height:70vh;\\r\\n    background:rgb(100, 162, 149);\\r\\n    color:rgb(240, 255, 240);\\r\\n}\\r\\n#currentMovieTitle{\\r\\n    text-align:center;\\r\\n    font-size:24px;\\r\\n    font-weight:bold;\\r\\n}\\r\\n#rating{\\r\\n    background:black;\\r\\n    color:yellow;\\r\\n    padding:4px 20px;\\r\\n    border-radius:5px;\\r\\n    float:right;\\r\\n    font-size:18px;\\r\\n}\\r\\n#currentMovieYear{\\r\\n    font-size:14px;\\r\\n}\\r\\n.btn{\\r\\n    background:black;    \\r\\n    padding:5px 20px;\\r\\n    font-weight:bold;\\r\\n}\\r\\n.btn a{\\r\\n    color:white;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\" id=\\\"singleMovieContainer\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"currentMovie\\\">\\n      <div class=\\\"col-md-12\\\">\\n       <p id=\\\"currentMovieTitle\\\"> <span>{{currentMovie.Title}}</span><span id=\\\"currentMovieYear\\\">({{currentMovie.Year}})</span><span id=\\\"rating\\\">{{currentMovie.imdbRating}}</span> </p>      \\n       <p> <span style=\\\"margin-right:20px;\\\"><b>Type:</b>{{currentMovie.Type}}</span><span style=\\\"margin-right:20px;\\\"><b>Language:</b>{{currentMovie.Language}}</span><span><b>Runtime:</b>{{currentMovie.Runtime}}</span> </p>      \\n       <p><b>Plot:</b> {{currentMovie.Plot}} </p>      \\n       <p><span><b>Genre : </b>{{currentMovie.Genre}}</span></p>\\n       <p><span><b>Director : </b>{{currentMovie.Director}}</span></p>\\n       <p><span><b>Actors : </b>{{currentMovie.Actors}}</span></p>\\n       <p><span><b>Writer : </b>{{currentMovie.Writer}}</span></p>\\n       <p><span><b>Production: </b>{{currentMovie.Production}}</span></p>\\n       <p><span><b>Released : </b>{{currentMovie.Released}}</span></p>\\n       <p><span><b>ID : </b>{{currentMovie.imdbID}}</span></p>\\n       <p style=\\\"text-align:center\\\"><button class=\\\"btn\\\"><a href=\\\"home\\\">Go Back</a></button></p>\\n      </div>\\n    </div>  \\n  </div>\\n\\n  \\n    \\n    \\t\\n    \\n    \"","import { Component, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router  } from '@angular/router';\nimport {ImdbHttpService} from \"../imdb-http.service\";\n\n@Component({\n  selector: 'app-single-movie',\n  templateUrl: './single-movie.component.html',\n  styleUrls: ['./single-movie.component.css']\n})\nexport class SingleMovieComponent implements OnInit, OnDestroy {\n    public currentMovie;    \n\n    constructor(private  _route:ActivatedRoute, private router:Router,public imdbHttpService:ImdbHttpService) { \n    console.log(\"single-movie component constructor called\")\n  }\n\n  ngOnInit() {\n    \n    console.log(\"ngInit single-movie component called\");\n    let singleMovieId = this._route.snapshot.paramMap.get('imdbID');\n    console.log(singleMovieId);\n    this.imdbHttpService.getSingleMovie(singleMovieId).subscribe(\n      data=>{\n        console.log(\"logging data\");\n        this.currentMovie = data;\n        console.log(this.currentMovie);\n      }, \n      error=>{\n        console.log(\"some error occurred\");\n      }\n    )\n    console.log(this.currentMovie);\n  }\n\n  ngOnDestroy() {\n    console.log(\"single-movie component destroyed\");\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}